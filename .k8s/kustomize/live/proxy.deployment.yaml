apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -f docker-compose-resolved.yaml -o .k8s\v0.4.5.8
    kompose.image-pull-secret: ungpregcredtoken
    kompose.service.expose: "true"
    kompose.service.type: LoadBalancer
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: proxy
  name: proxy
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: proxy
  type: LoadBalancer
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe
      convert -f docker-compose-resolved.yaml -o .k8s\v0.4.5.8
    kompose.image-pull-secret: ungpregcredtoken
    kompose.service.expose: "true"
    kompose.service.type: LoadBalancer
    kompose.version: 1.17.0 (a74acad)
  creationTimestamp: null
  labels:
    io.kompose.service: proxy
  name: proxy
spec:
  replicas: 1
  strategy: {}
  selector: 
    matchLabels:
        io.kompose.service: proxy 
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: proxy
    spec:
      containers:
      - args:
        - /bin/sh
        - -c
        - cp /etc/nginx/conf.d/nginx.conf /etc/nginx/nginx.conf && nginx -g 'daemon
          off;'
        env:
        - name: GET_HOSTS_FROM
          value: dns
        - name: GRAPHDB_PORT
          value: "7200"
        - name: GRAPHDB_REPO
          value: sdgs-data
        - name: NGINX_HOST
          value: linkedsdg.apps.officialstatistics.org
        - name: NGINX_PORT
          value: "80"
        image: containers.officialstatistics.org/cslovell/sdg-docker-ontologies/proxy:v0.4.5.8
        name: proxy
        ports:
        - containerPort: 80
        resources: {}
      restartPolicy: Always
      affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: hub.jupyter.org/node-purpose
                      operator: In
                      values:
                        - user
      tolerations:
      - key: hub.jupyter.org/dedicated
        operator: Equal
        value: user
        effect: NoSchedule
      - key: hub.jupyter.org_dedicated
        operator: Equal
        value: user
        effect: NoSchedule
      - key: node.kubernetes.io/not-ready
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
      - key: node.kubernetes.io/unreachable
        operator: Exists
        effect: NoExecute
        tolerationSeconds: 300
status: {}